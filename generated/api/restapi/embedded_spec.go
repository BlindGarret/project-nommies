// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Project Nommies API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "host": "not.implemented.io",
  "basePath": "/v1",
  "paths": {
    "/ingredientCategories": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "List all ingredient categories",
        "operationId": "listIngredientCategories",
        "parameters": [
          {
            "$ref": "#/parameters/OffsetParam"
          },
          {
            "$ref": "#/parameters/LimitParam"
          },
          {
            "$ref": "#/parameters/SortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient category response object containing list of categories",
            "schema": {
              "type": "object",
              "properties": {
                "next": {
                  "description": "Url to next page. Empty if no additional pages.",
                  "type": "string"
                },
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IngredientCategory"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ingredientCategories/{id}": {
      "put": {
        "tags": [
          "ingredients"
        ],
        "summary": "Creates an ingredient category",
        "operationId": "createIngredientCategory",
        "parameters": [
          {
            "type": "string",
            "description": "Category ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Creation model for category",
            "name": "creationModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IngredientCategoryCreationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response when model has been updated within the data collection"
          },
          "201": {
            "description": "Response when model is added to the data collection",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Location of created model."
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "List all ingredients",
        "operationId": "listIngredients",
        "parameters": [
          {
            "$ref": "#/parameters/OffsetParam"
          },
          {
            "$ref": "#/parameters/LimitParam"
          },
          {
            "$ref": "#/parameters/SortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient response object containing list of ingredients",
            "schema": {
              "type": "object",
              "properties": {
                "next": {
                  "description": "Url to next page. Empty if no additional pages.",
                  "type": "string"
                },
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SmallIngredient"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "List all recipes",
        "operationId": "listRecipes",
        "parameters": [
          {
            "$ref": "#/parameters/OffsetParam"
          },
          {
            "$ref": "#/parameters/LimitParam"
          },
          {
            "$ref": "#/parameters/SortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe response object containing list of recipes",
            "schema": {
              "type": "object",
              "properties": {
                "next": {
                  "description": "Url to next page. Empty if no additional pages.",
                  "type": "string"
                },
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SmallRecipe"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IngredientCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/IngredientCategoryCreationModel"
        },
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": {
            "id": {
              "description": "Category name/id.",
              "type": "string"
            }
          }
        }
      ]
    },
    "IngredientCategoryCreationModel": {
      "type": "object",
      "required": [
        "color"
      ],
      "properties": {
        "color": {
          "description": "Color of category.",
          "type": "string"
        }
      }
    },
    "SmallIngredient": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "category": {
          "description": "List of categories this ingredient belongs to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of ingredient.",
          "type": "string"
        },
        "id": {
          "description": "Unique ingredient ID.",
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "description": "URL for display image of ingredient.",
          "type": "string"
        },
        "name": {
          "description": "Name of ingredient.",
          "type": "string"
        },
        "url": {
          "description": "Direct URL to ingredient.",
          "type": "string"
        }
      }
    },
    "SmallRecipe": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "category": {
          "description": "List of categories this recipe belongs to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of recipe.",
          "type": "string"
        },
        "id": {
          "description": "Unique recipe ID.",
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "description": "URL for display image of recipe.",
          "type": "string"
        },
        "name": {
          "description": "Name of recipe.",
          "type": "string"
        },
        "url": {
          "description": "Direct URL to recipe.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "LimitParam": {
      "minimum": 1,
      "type": "integer",
      "format": "int32",
      "description": "How many items to return at one time (min 1)",
      "name": "limit",
      "in": "query"
    },
    "OffsetParam": {
      "type": "integer",
      "format": "int32",
      "description": "How many items to skip",
      "name": "offset",
      "in": "query"
    },
    "SortParam": {
      "enum": [
        "asc",
        "desc"
      ],
      "type": "string",
      "description": "Sort order:\n  * asc - Ascending, from A to Z.\n  * desc - Descending, from Z to A.\n",
      "name": "sort",
      "in": "query"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Project Nommies API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "host": "not.implemented.io",
  "basePath": "/v1",
  "paths": {
    "/ingredientCategories": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "List all ingredient categories",
        "operationId": "listIngredientCategories",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "How many items to skip",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "description": "How many items to return at one time (min 1)",
            "name": "limit",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort order:\n  * asc - Ascending, from A to Z.\n  * desc - Descending, from Z to A.\n",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient category response object containing list of categories",
            "schema": {
              "type": "object",
              "properties": {
                "next": {
                  "description": "Url to next page. Empty if no additional pages.",
                  "type": "string"
                },
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IngredientCategory"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ingredientCategories/{id}": {
      "put": {
        "tags": [
          "ingredients"
        ],
        "summary": "Creates an ingredient category",
        "operationId": "createIngredientCategory",
        "parameters": [
          {
            "type": "string",
            "description": "Category ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Creation model for category",
            "name": "creationModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IngredientCategoryCreationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response when model has been updated within the data collection"
          },
          "201": {
            "description": "Response when model is added to the data collection",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Location of created model."
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "List all ingredients",
        "operationId": "listIngredients",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "How many items to skip",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "description": "How many items to return at one time (min 1)",
            "name": "limit",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort order:\n  * asc - Ascending, from A to Z.\n  * desc - Descending, from Z to A.\n",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient response object containing list of ingredients",
            "schema": {
              "type": "object",
              "properties": {
                "next": {
                  "description": "Url to next page. Empty if no additional pages.",
                  "type": "string"
                },
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SmallIngredient"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "List all recipes",
        "operationId": "listRecipes",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "How many items to skip",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "description": "How many items to return at one time (min 1)",
            "name": "limit",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort order:\n  * asc - Ascending, from A to Z.\n  * desc - Descending, from Z to A.\n",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe response object containing list of recipes",
            "schema": {
              "type": "object",
              "properties": {
                "next": {
                  "description": "Url to next page. Empty if no additional pages.",
                  "type": "string"
                },
                "recipes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SmallRecipe"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IngredientCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/IngredientCategoryCreationModel"
        },
        {
          "$ref": "#/definitions/IngredientCategoryAllOf1"
        },
        {
          "properties": {
            "id": {
              "description": "Category name/id.",
              "type": "string"
            }
          }
        }
      ]
    },
    "IngredientCategoryAllOf1": {
      "required": [
        "id"
      ]
    },
    "IngredientCategoryCreationModel": {
      "type": "object",
      "required": [
        "color"
      ],
      "properties": {
        "color": {
          "description": "Color of category.",
          "type": "string"
        }
      }
    },
    "SmallIngredient": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "category": {
          "description": "List of categories this ingredient belongs to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of ingredient.",
          "type": "string"
        },
        "id": {
          "description": "Unique ingredient ID.",
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "description": "URL for display image of ingredient.",
          "type": "string"
        },
        "name": {
          "description": "Name of ingredient.",
          "type": "string"
        },
        "url": {
          "description": "Direct URL to ingredient.",
          "type": "string"
        }
      }
    },
    "SmallRecipe": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "category": {
          "description": "List of categories this recipe belongs to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of recipe.",
          "type": "string"
        },
        "id": {
          "description": "Unique recipe ID.",
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "description": "URL for display image of recipe.",
          "type": "string"
        },
        "name": {
          "description": "Name of recipe.",
          "type": "string"
        },
        "url": {
          "description": "Direct URL to recipe.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "LimitParam": {
      "minimum": 1,
      "type": "integer",
      "format": "int32",
      "description": "How many items to return at one time (min 1)",
      "name": "limit",
      "in": "query"
    },
    "OffsetParam": {
      "type": "integer",
      "format": "int32",
      "description": "How many items to skip",
      "name": "offset",
      "in": "query"
    },
    "SortParam": {
      "enum": [
        "asc",
        "desc"
      ],
      "type": "string",
      "description": "Sort order:\n  * asc - Ascending, from A to Z.\n  * desc - Descending, from Z to A.\n",
      "name": "sort",
      "in": "query"
    }
  }
}`))
}
